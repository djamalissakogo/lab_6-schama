// input mass1
0001_0000000000_00000000000000000000000000000010
0001_0000000001_00000000000000000000000000001011
0001_0000000010_00000000000000000000000000000000
0001_0000000011_00000000000000000000000000000011
0001_0000000100_00000000000000000000000000000000
0001_0000000101_00000000000000000000000000001100
// input mass2
0001_0000001000_00000000000000000000000000000011
0001_0000001001_00000000000000000000000000001001
0001_0000001010_00000000000000000000000000000010
0001_0000001011_00000000000000000000000000000111
0001_0000001100_00000000000000000000000000000110
0001_0000001101_00000000000000000000000000001101
// input size and iter
0001_0000010000_00000000000000000000000000000110 // 6 <- size
0001_0000010001_00000000000000000000000000010010 // 0 ard_iter1
0001_0000010010_00000000000000000000000000000000 // 0 iter mass1
0001_0000010011_00000000000000000000000000010100 // 0 ard_iter2
0001_0000010100_00000000000000000000000000001000 // 0 iter mass2
// result
0001_0000010111_00000000000000000000000000011000 // adr result_mul
0001_0000011000_00000000000000000000000000000000 // result_mul
0001_0000011001_00000000000000000000000000011010 // adr resul_programm
0001_0000011010_00000000000000000000000000000000 // result_programm
// start program
1001_0000010010_0000010100_0000010111_000000000000 // MUL mass1[i] mass2[i]
0000_000000000000000000000000000000000000000000 //    NOP
0010_0000011010_0000011000_0000011010_000000000000 // ADD / result_programm = result_programm + result_mul
0101_0000010010_00000000000000000000000000000000 //   INCR iter mass1
0101_0000010100_00000000000000000000000000000000 //   INCR iter mass2
0110_0000010001_0000010000_0000000000000000000000 //  CMP iter mass1, size
1000_0000010101_00000000000000000000000000000000 //   JMP_NZ -> ard[start_program] / [21]